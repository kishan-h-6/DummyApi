<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="11" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-12T10:50:41 IST" name="Gradle suite" finished-at="2022-10-12T10:50:52 IST" duration-ms="11491">
    <groups>
      <group name="api">
        <method signature="EndToEndTestCases.end2EndTestsCases()[pri:0, instance:Capstone.DummyAPI.E2E.EndToEndTestCases@78aa1f72]" name="end2EndTestsCases" class="Capstone.DummyAPI.E2E.EndToEndTestCases"/>
        <method signature="CreateNewPost.createNewPost()[pri:0, instance:Capstone.DummyAPI.Posts.CreateNewPost.CreateNewPost@1a72a540]" name="createNewPost" class="Capstone.DummyAPI.Posts.CreateNewPost.CreateNewPost"/>
        <method signature="DeletePostById.deletePostById()[pri:0, instance:Capstone.DummyAPI.Posts.DeletePostByValidId.DeletePostById@198d6542]" name="deletePostById" class="Capstone.DummyAPI.Posts.DeletePostByValidId.DeletePostById"/>
        <method signature="GetAllPosts.getAllPosts()[pri:0, instance:Capstone.DummyAPI.Posts.GetAllPosts.GetAllPosts@5e403b4a]" name="getAllPosts" class="Capstone.DummyAPI.Posts.GetAllPosts.GetAllPosts"/>
        <method signature="GetPostById.getPostById()[pri:0, instance:Capstone.DummyAPI.Posts.GetPostById.GetPostById@5117dd67]" name="getPostById" class="Capstone.DummyAPI.Posts.GetPostById.GetPostById"/>
        <method signature="CreateUserWithDuplicateEmail.createNewUserWithError()[pri:0, instance:Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithDuplicateEmail@5be49b60]" name="createNewUserWithError" class="Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithDuplicateEmail"/>
        <method signature="CreateUserWithValidEmail.createNewUser()[pri:0, instance:Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithValidEmail@2931522b]" name="createNewUser" class="Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithValidEmail"/>
        <method signature="DeleteUserById.deleteUserById()[pri:0, instance:Capstone.DummyAPI.Users.DeleteUser.DeleteUserById@7674b62c]" name="deleteUserById" class="Capstone.DummyAPI.Users.DeleteUser.DeleteUserById"/>
        <method signature="GetAllUsersUnderYourAccount.getAllUsersUnderYouAccount()[pri:0, instance:Capstone.DummyAPI.Users.GetAllUserUnderYourAccount.GetAllUsersUnderYourAccount@19e7a160]" name="getAllUsersUnderYouAccount" class="Capstone.DummyAPI.Users.GetAllUserUnderYourAccount.GetAllUsersUnderYourAccount"/>
        <method signature="GetAllUsers.getAllUsers()[pri:0, instance:Capstone.DummyAPI.Users.GetAllUsers.GetAllUsers@662706a7]" name="getAllUsers" class="Capstone.DummyAPI.Users.GetAllUsers.GetAllUsers"/>
        <method signature="UpdateUserDetails.UpdateUser()[pri:0, instance:Capstone.DummyAPI.Users.UpdateUserDetails.UpdateUserDetails@45a4b042]" name="UpdateUser" class="Capstone.DummyAPI.Users.UpdateUserDetails.UpdateUserDetails"/>
      </group> <!-- api -->
    </groups>
    <test started-at="2022-10-12T10:50:41 IST" name="Gradle test" finished-at="2022-10-12T10:50:52 IST" duration-ms="11491">
      <class name="Capstone.DummyAPI.Users.GetAllUsers.GetAllUsers">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Users.GetAllUsers.GetAllUsers@662706a7]" started-at="2022-10-12T10:50:51 IST" name="beforeClass" finished-at="2022-10-12T10:50:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getAllUsers()[pri:0, instance:Capstone.DummyAPI.Users.GetAllUsers.GetAllUsers@662706a7]" started-at="2022-10-12T10:50:51 IST" name="getAllUsers" finished-at="2022-10-12T10:50:52 IST" duration-ms="452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUsers -->
      </class> <!-- Capstone.DummyAPI.Users.GetAllUsers.GetAllUsers -->
      <class name="Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithDuplicateEmail">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithDuplicateEmail@5be49b60]" started-at="2022-10-12T10:50:49 IST" name="beforeClass" finished-at="2022-10-12T10:50:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="createNewUserWithError()[pri:0, instance:Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithDuplicateEmail@5be49b60]" started-at="2022-10-12T10:50:49 IST" name="createNewUserWithError" finished-at="2022-10-12T10:50:50 IST" duration-ms="397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUserWithError -->
      </class> <!-- Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithDuplicateEmail -->
      <class name="Capstone.DummyAPI.Posts.CreateNewPost.CreateNewPost">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Posts.CreateNewPost.CreateNewPost@1a72a540]" started-at="2022-10-12T10:50:46 IST" name="beforeClass" finished-at="2022-10-12T10:50:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="createNewPost()[pri:0, instance:Capstone.DummyAPI.Posts.CreateNewPost.CreateNewPost@1a72a540]" started-at="2022-10-12T10:50:46 IST" name="createNewPost" finished-at="2022-10-12T10:50:47 IST" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewPost -->
      </class> <!-- Capstone.DummyAPI.Posts.CreateNewPost.CreateNewPost -->
      <class name="Capstone.DummyAPI.E2E.EndToEndTestCases">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.E2E.EndToEndTestCases@78aa1f72]" started-at="2022-10-12T10:50:41 IST" name="beforeClass" finished-at="2022-10-12T10:50:41 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="end2EndTestsCases()[pri:0, instance:Capstone.DummyAPI.E2E.EndToEndTestCases@78aa1f72]" started-at="2022-10-12T10:50:41 IST" name="end2EndTestsCases" finished-at="2022-10-12T10:50:46 IST" duration-ms="5399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end2EndTestsCases -->
      </class> <!-- Capstone.DummyAPI.E2E.EndToEndTestCases -->
      <class name="Capstone.DummyAPI.Posts.GetAllPosts.GetAllPosts">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Posts.GetAllPosts.GetAllPosts@5e403b4a]" started-at="2022-10-12T10:50:48 IST" name="beforeClass" finished-at="2022-10-12T10:50:48 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getAllPosts()[pri:0, instance:Capstone.DummyAPI.Posts.GetAllPosts.GetAllPosts@5e403b4a]" started-at="2022-10-12T10:50:48 IST" name="getAllPosts" finished-at="2022-10-12T10:50:48 IST" duration-ms="455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllPosts -->
      </class> <!-- Capstone.DummyAPI.Posts.GetAllPosts.GetAllPosts -->
      <class name="Capstone.DummyAPI.Users.DeleteUser.DeleteUserById">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Users.DeleteUser.DeleteUserById@7674b62c]" started-at="2022-10-12T10:50:50 IST" name="beforeClass" finished-at="2022-10-12T10:50:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="deleteUserById()[pri:0, instance:Capstone.DummyAPI.Users.DeleteUser.DeleteUserById@7674b62c]" started-at="2022-10-12T10:50:50 IST" name="deleteUserById" finished-at="2022-10-12T10:50:51 IST" duration-ms="957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUserById -->
      </class> <!-- Capstone.DummyAPI.Users.DeleteUser.DeleteUserById -->
      <class name="Capstone.DummyAPI.Users.GetAllUserUnderYourAccount.GetAllUsersUnderYourAccount">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Users.GetAllUserUnderYourAccount.GetAllUsersUnderYourAccount@19e7a160]" started-at="2022-10-12T10:50:51 IST" name="beforeClass" finished-at="2022-10-12T10:50:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getAllUsersUnderYouAccount()[pri:0, instance:Capstone.DummyAPI.Users.GetAllUserUnderYourAccount.GetAllUsersUnderYourAccount@19e7a160]" started-at="2022-10-12T10:50:51 IST" name="getAllUsersUnderYouAccount" finished-at="2022-10-12T10:50:51 IST" duration-ms="425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUsersUnderYouAccount -->
      </class> <!-- Capstone.DummyAPI.Users.GetAllUserUnderYourAccount.GetAllUsersUnderYourAccount -->
      <class name="Capstone.DummyAPI.Users.UpdateUserDetails.UpdateUserDetails">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Users.UpdateUserDetails.UpdateUserDetails@45a4b042]" started-at="2022-10-12T10:50:52 IST" name="beforeClass" finished-at="2022-10-12T10:50:52 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="UpdateUser()[pri:0, instance:Capstone.DummyAPI.Users.UpdateUserDetails.UpdateUserDetails@45a4b042]" started-at="2022-10-12T10:50:52 IST" name="UpdateUser" finished-at="2022-10-12T10:50:52 IST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateUser -->
      </class> <!-- Capstone.DummyAPI.Users.UpdateUserDetails.UpdateUserDetails -->
      <class name="Capstone.DummyAPI.Posts.GetPostById.GetPostById">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Posts.GetPostById.GetPostById@5117dd67]" started-at="2022-10-12T10:50:48 IST" name="beforeClass" finished-at="2022-10-12T10:50:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="getPostById()[pri:0, instance:Capstone.DummyAPI.Posts.GetPostById.GetPostById@5117dd67]" started-at="2022-10-12T10:50:48 IST" name="getPostById" finished-at="2022-10-12T10:50:49 IST" duration-ms="963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostById -->
      </class> <!-- Capstone.DummyAPI.Posts.GetPostById.GetPostById -->
      <class name="Capstone.DummyAPI.Posts.DeletePostByValidId.DeletePostById">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Posts.DeletePostByValidId.DeletePostById@198d6542]" started-at="2022-10-12T10:50:47 IST" name="beforeClass" finished-at="2022-10-12T10:50:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="deletePostById()[pri:0, instance:Capstone.DummyAPI.Posts.DeletePostByValidId.DeletePostById@198d6542]" started-at="2022-10-12T10:50:47 IST" name="deletePostById" finished-at="2022-10-12T10:50:48 IST" duration-ms="1083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePostById -->
      </class> <!-- Capstone.DummyAPI.Posts.DeletePostByValidId.DeletePostById -->
      <class name="Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithValidEmail">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithValidEmail@2931522b]" started-at="2022-10-12T10:50:50 IST" name="beforeClass" finished-at="2022-10-12T10:50:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="createNewUser()[pri:0, instance:Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithValidEmail@2931522b]" started-at="2022-10-12T10:50:50 IST" name="createNewUser" finished-at="2022-10-12T10:50:50 IST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
      </class> <!-- Capstone.DummyAPI.Users.CreateUserWithEmail.CreateUserWithValidEmail -->
    </test> <!-- Gradle test -->
  </suite> <!-- Gradle suite -->
</testng-results>
